name: build

permissions:
  contents: write

on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to build."
        required: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{steps.get_tag.outputs.tag}}
    steps:
      - id: get_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{github.event.inputs.tag}}" ]
          then
            latestTag="${{github.event.inputs.tag}}"
          else
            latestTag="$(curl -L https://api.github.com/repos/matrix-org/dendrite/releases/latest | jq -r '.tag_name')"
          fi
          echo "tag=$latestTag"  >> $GITHUB_OUTPUT
          gh release delete --yes \
            --repo="${{github.repository}}" \
            --cleanup-tag "$latestTag" || echo "Nothing to delete."
          sleep 1
          gh release create "$latestTag" \
            --repo="${{github.repository}}" \
            --title="$latestTag" \
            --generate-notes

  linux_build:
    strategy:
      matrix:
        goamd: [v1, v2, v3, v4]
    env:
      GOOS: linux
      GOARCH: amd64
      GOAMD64: ${{matrix.goamd}}
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'matrix-org/dendrite'
          ref: ${{needs.prepare.outputs.tag}}
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: build
        run : |
          go build -o bin/ ./cmd/...
          tar cvf "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar" bin/*
          xz -9v "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar"
      - name: upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{needs.prepare.outputs.tag}}" "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar.xz" \
            --clobber \
            --repo="${{github.repository}}"
