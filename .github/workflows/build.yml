name: build

permissions:
  contents: write

on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to build."
        required: false

jobs:
  linux_build:
    env:
      GOOS: linux
      GOARCH: amd64
      GOAMD64: v3
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    steps:
      - name: get-tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run : |
          if [ "${{github.event.inputs.tag}}" ]
          then
            latestTag="${{github.event.inputs.tag}}"
          else
            latestTag="$(curl -L https://api.github.com/repos/matrix-org/dendrite/releases/latest | jq -r '.tag_name')"
          fi
          gh release delete --yes \
            --repo="${{github.repository}}" \
            --cleanup-tag "$latestTag" || echo "Nothing to delete."
          echo "LATEST_TAG=$latestTag" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          repository: 'matrix-org/dendrite'
          ref: "${{ env.LATEST_TAG }}"
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: build
        run : |
          go build -ldflags "-s -w" -o bin/ ./cmd/...
          tar cvf "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar" bin/*
          xz -9v "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar"
      - name: upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.LATEST_TAG }}" \
            --repo="${{github.repository}}" \
            --title="${{ env.LATEST_TAG }}" \
            --generate-notes
          gh release upload "${{ env.LATEST_TAG }}" "bin-${{env.GOOS}}-${{env.GOARCH}}-${{env.GOAMD64}}.tar.xz" \
            --clobber \
            --repo="${{github.repository}}"